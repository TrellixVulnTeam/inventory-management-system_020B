{"ast":null,"code":"import _asyncToGenerator from \"/Users/apoorvathumma/Desktop/Me/School/2021 Fall/IT390/Weekly Portfolio/Final Project Portfolio/Final Project Code/inventory-management-system/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { environment } from '../../environments/environment';\nimport { Car } from '../models/car';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CarService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n\n  getCars() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let inventoryData = new Array();\n\n      _this.httpClient.get(environment.api + '/cars').subscribe(data => {\n        console.log('retrieved data...');\n        console.log('processing data...');\n\n        for (let i = 0; i < data.cars.length; i++) {\n          let newCar = new Car();\n          newCar.vin = data.cars[i].vin;\n          newCar.brand = data.cars[i].brand;\n          newCar.model = data.cars[i].model;\n          newCar.color = data.cars[i].color;\n          newCar.year = Number(data.cars[i].year);\n          newCar.mileage = Number(data.cars[i].mileage);\n          newCar.price = Number(data.cars[i].price);\n          newCar.image = data.cars[i].image;\n          inventoryData.push(newCar);\n        }\n\n        console.log('done processing...');\n      });\n\n      console.log('returning data...');\n      return inventoryData;\n    })();\n  }\n\n}\n\nCarService.ɵfac = function CarService_Factory(t) {\n  return new (t || CarService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nCarService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CarService,\n  factory: CarService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/apoorvathumma/Desktop/Me/School/2021 Fall/IT390/Weekly Portfolio/Final Project Portfolio/Final Project Code/inventory-management-system/ui/src/app/services/car.service.ts"],"names":[],"mappings":";AAEA,SAAS,WAAT,QAA4B,gCAA5B;AAEA,SAAS,GAAT,QAAoB,eAApB;;;AAKA,OAAM,MAAO,UAAP,CAAiB;AACrB,EAAA,WAAA,CAAoB,UAApB,EAA0C;AAAtB,SAAA,UAAA,GAAA,UAAA;AAA0B;;AAExC,EAAA,OAAO,GAAA;AAAA;;AAAA;AACX,UAAI,aAAa,GAAU,IAAI,KAAJ,EAA3B;;AACA,MAAA,KAAI,CAAC,UAAL,CAAgB,GAAhB,CAAoB,WAAW,CAAC,GAAZ,GAAkB,OAAtC,EAA+C,SAA/C,CAA0D,IAAD,IAAc;AACrE,QAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,IAAL,CAAU,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AACzC,cAAI,MAAM,GAAG,IAAI,GAAJ,EAAb;AAEA,UAAA,MAAM,CAAC,GAAP,GAAa,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,GAA1B;AACA,UAAA,MAAM,CAAC,KAAP,GAAe,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,KAA5B;AACA,UAAA,MAAM,CAAC,KAAP,GAAe,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,KAA5B;AACA,UAAA,MAAM,CAAC,KAAP,GAAe,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,KAA5B;AACA,UAAA,MAAM,CAAC,IAAP,GAAc,MAAM,CAAC,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,IAAd,CAApB;AACA,UAAA,MAAM,CAAC,OAAP,GAAiB,MAAM,CAAC,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,OAAd,CAAvB;AACA,UAAA,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,KAAd,CAArB;AACA,UAAA,MAAM,CAAC,KAAP,GAAe,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,KAA5B;AAEA,UAAA,aAAa,CAAC,IAAd,CAAmB,MAAnB;AACD;;AACD,QAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ;AACD,OAlBD;;AAmBA,MAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;AACA,aAAO,aAAP;AAtBW;AAuBZ;;AA1BoB;;;mBAAV,U,EAAU,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAV,U;AAAU,EAAA,OAAA,EAAV,UAAU,CAAA,I;AAAA,EAAA,UAAA,EAFT","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\nimport { Car } from '../models/car';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CarService {\n  constructor(private httpClient: HttpClient) {}\n\n  async getCars() {\n    let inventoryData: Car[] = new Array();\n    this.httpClient.get(environment.api + '/cars').subscribe((data: any) => {\n      console.log('retrieved data...');\n      console.log('processing data...');\n      for (let i = 0; i < data.cars.length; i++) {\n        let newCar = new Car();\n\n        newCar.vin = data.cars[i].vin;\n        newCar.brand = data.cars[i].brand;\n        newCar.model = data.cars[i].model;\n        newCar.color = data.cars[i].color;\n        newCar.year = Number(data.cars[i].year);\n        newCar.mileage = Number(data.cars[i].mileage);\n        newCar.price = Number(data.cars[i].price);\n        newCar.image = data.cars[i].image;\n\n        inventoryData.push(newCar);\n      }\n      console.log('done processing...');\n    });\n    console.log('returning data...');\n    return inventoryData;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}