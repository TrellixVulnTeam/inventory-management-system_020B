{"ast":null,"code":"import * as $ from 'jquery';\nimport { ErrorAlertComponent } from './error-alert/error-alert.component';\nimport { CarImageModalComponent } from './car-image-modal/car-image-modal.component';\nimport { Car } from './models/car';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/car.service\";\nimport * as i2 from \"@angular/material/dialog\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(carService, dialog, ngZone) {\n      this.carService = carService;\n      this.dialog = dialog;\n      this.ngZone = ngZone;\n      this.inventoryData = new Array();\n      this.inventoryDataToDelete = new Array();\n      this.sortByColumnNumber = null;\n      this.searchValue = '';\n      this.currentPage = 1;\n      this.rowsPerPage = 5;\n    }\n\n    ngOnInit() {\n      let _this = this;\n\n      $(function () {\n        _this.initializeTable();\n\n        $('#add-row-btn').click(function () {\n          let newCar = new Car();\n          newCar.dbStatus = 'add';\n\n          _this.inventoryData.push(newCar);\n\n          _this.goToLastPage();\n\n          _this.generateTable();\n        });\n        $('#edit-btn').click(function () {\n          _this.startEditing();\n        });\n        $('#save-btn').click(function () {\n          if (!_this.saveDataToDB()) {\n            return;\n          }\n\n          _this.doneEditing();\n        });\n        $('#cancel-btn').click(function () {\n          _this.initializeTable();\n\n          _this.doneEditing();\n        });\n        $('th').click(function () {\n          let columnHeaderId = $(this).attr('id');\n          _this.sortByColumnNumber = Number(columnHeaderId === null || columnHeaderId === void 0 ? void 0 : columnHeaderId.substring(columnHeaderId.length - 1, columnHeaderId.length));\n\n          _this.toggleSortIcon(this);\n\n          _this.sort(_this.sortByColumnNumber, $(this).find('i').hasClass('fa-sort-up'));\n\n          _this.generateTable();\n        });\n        $('td').keypress(function (event) {\n          return event.key != 'Enter';\n        });\n        $('#searchbar-field').keyup(event => {\n          if (event.key == 'Enter') {\n            _this.searchInputHandler();\n          }\n        });\n        $('#search-btn').click(() => _this.searchInputHandler());\n        $('#clear-search-btn').click(function () {\n          _this.searchValue = '';\n          $('#searchbar-field').val('');\n\n          _this.setAllRowsToSearchVisible();\n\n          _this.generateTable();\n        });\n        $('#next-page-btn').click(function () {\n          if (!_this.isPageOnTopEdgeOfBounds()) {\n            _this.currentPage++;\n\n            _this.generateTable();\n          }\n        });\n        $('#prev-page-btn').click(function () {\n          if (!_this.isPageOnBottomEdgeOfBounds()) {\n            _this.currentPage--;\n\n            _this.generateTable();\n          }\n        });\n        $('#rows-per-page-field').change(() => _this.rowsPerPageInputHandler()).keyup(event => {\n          if ($('#rows-per-page-field').val() == '0') {\n            $('#rows-per-page-field').val(_this.rowsPerPage);\n          } else if (event.keyCode != 37 && event.keyCode != 39) {\n            _this.rowsPerPageInputHandler();\n          }\n        }).keypress(function (event) {\n          return (event.key == '1' || event.key == '2' || event.key == '3' || event.key == '4' || event.key == '5' || event.key == '6' || event.key == '7' || event.key == '8' || event.key == '9' || event.key == '0') && !(event.key == '0' && $(this).val().length == 0);\n        }).blur(function () {\n          if ($(this).val() == '0' || $(this).val().length == 0) {\n            $(this).val(_this.rowsPerPage);\n          }\n        });\n      });\n    }\n\n    initializeTable() {\n      this.populateInventoryData(() => {\n        this.loadHeadingIds();\n        this.generateTable();\n      });\n    }\n\n    populateInventoryData(callback) {\n      this.inventoryData = new Array();\n      this.carService.getCars(data => {\n        for (let i = 0; i < data.cars.length; i++) {\n          let newCar = new Car();\n          newCar.vin = data.cars[i].vin;\n          newCar.brand = data.cars[i].brand;\n          newCar.model = data.cars[i].model;\n          newCar.color = data.cars[i].color;\n          newCar.year = data.cars[i].year != null ? Number(data.cars[i].year) : null;\n          newCar.mileage = data.cars[i].mileage != null ? Number(data.cars[i].mileage) : null;\n          newCar.price = data.cars[i].price != null ? Number(data.cars[i].price) : null;\n          newCar.image = data.cars[i].image;\n          this.inventoryData.push(newCar);\n        }\n\n        callback();\n      });\n    }\n\n    loadHeadingIds() {\n      let headings = document.querySelectorAll('th');\n\n      for (let i = 0; i < headings.length; i++) {\n        $(headings[i]).attr('id', 'column-header-' + i);\n      }\n    }\n\n    generateTable() {\n      this.updatePagination();\n      $('tbody').html('');\n\n      for (let i = 0; i < this.inventoryData.length; i++) {\n        if (this.isInventoryVisible(i)) {\n          $('tbody').append(this.generateRow(this.inventoryData[i], i));\n        }\n      }\n\n      this.addDeleteButtonHandlers();\n      this.addUpdateCellHandlers();\n      this.addRowDetailsHandlers();\n      this.adjustHoverEffect();\n\n      if (this.sortByColumnNumber != null) {\n        this.highlightSortByColumn(this.sortByColumnNumber);\n      }\n    }\n\n    generateRow(data, rowNumber) {\n      let row = '<tr>';\n\n      for (let i = 0; i < document.querySelectorAll('th').length; i++) {\n        row += '<td class=\"column-data-' + i + '\" align-middle\"';\n        row += this.isEditable() && i != 0 || i == 0 && this.inventoryData[rowNumber].dbStatus == 'add' ? ' contenteditable=\"true\"' : '';\n        row += '>';\n        row += this.generateCellContents(data, i);\n        row += '</td>';\n      }\n\n      row += '<td class=\"button-cell align-middle';\n      row += this.isEditable() ? '\" contenteditable=\"false\"' : ' d-none\"';\n      row += '>';\n      row += '<button class=\"btn btn-danger delete-btn\"> \\\n              <i class=\"fas fa-trash\"></i> \\\n            </button>';\n      row += '</td>';\n      row += '</tr>';\n      return row;\n    }\n\n    generateCellContents(data, i) {\n      let cell = '';\n\n      switch (i) {\n        case 0:\n          cell += data.vin || '';\n          break;\n\n        case 1:\n          cell += data.brand || '';\n          break;\n\n        case 2:\n          cell += data.model || '';\n          break;\n\n        case 3:\n          cell += data.color || '';\n          break;\n\n        case 4:\n          cell += data.year != null ? data.year : '';\n          break;\n\n        case 5:\n          cell += data.mileage != null ? data.mileage.toLocaleString() : '';\n          break;\n\n        case 6:\n          cell += data.price != null ? '$' + data.price.toLocaleString(undefined, {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n          }) : '';\n          break;\n      }\n\n      return cell;\n    }\n\n    addRowDetailsHandlers() {\n      if (!this.isEditable()) {\n        let _this = this;\n\n        $('tbody tr').off('click').click(function () {\n          let inventoryIndex = _this.getInventoryIndexOfRow($(this).parent().children().index($(this)));\n\n          _this.ngZone.run(() => {\n            let dialogRef = _this.dialog.open(CarImageModalComponent, {\n              data: {\n                image: _this.inventoryData[inventoryIndex].image,\n                label: (_this.inventoryData[inventoryIndex].brand ? _this.inventoryData[inventoryIndex].brand : '') + ' ' + (_this.inventoryData[inventoryIndex].model ? _this.inventoryData[inventoryIndex].model : ''),\n                vin: _this.inventoryData[inventoryIndex].vin\n              },\n              width: '50%'\n            });\n\n            dialogRef.afterClosed().subscribe(image => {\n              _this.inventoryData[inventoryIndex].image = image;\n            });\n          });\n        });\n      }\n    }\n\n    isEditable() {\n      return $('#edit-btn').hasClass('d-none');\n    }\n\n    isInventoryVisible(inventoryIndex) {\n      return this.isInventorySearchVisible(inventoryIndex) && this.isInventoryPageVisible(inventoryIndex);\n    }\n\n    isInventorySearchVisible(inventoryIndex) {\n      return this.inventoryData[inventoryIndex].toDisplaySearch;\n    }\n\n    isInventoryPageVisible(inventoryIndex) {\n      return this.inventoryData[inventoryIndex].toDisplayPage;\n    }\n\n    adjustHoverEffect() {\n      this.isEditable() ? $('tbody tr').removeClass('hover') : $('tbody tr').addClass('hover');\n    }\n\n    addUpdateCellHandlers() {\n      let _this = this;\n\n      let originalCellContent;\n      $('td').focus(function () {\n        originalCellContent = $(this).text();\n\n        let inventoryIndex = _this.getInventoryIndexOfRow($(this).parent().parent().children().index($(this).parent()));\n\n        if (_this.inventoryData[inventoryIndex].dbStatus != 'add') {\n          _this.inventoryData[inventoryIndex].dbStatus = 'update';\n        }\n      }).blur(function () {\n        var _a;\n\n        let cellContent = $(this).text();\n        let columnNumber = (_a = $(this).attr('class')) === null || _a === void 0 ? void 0 : _a.split(' ')[0].split('-')[2];\n\n        let inventoryIndex = _this.getInventoryIndexOfRow($(this).parent().parent().children().index($(this).parent()));\n\n        if (!_this.validateInput(cellContent, Number(columnNumber), inventoryIndex)) {\n          $(this).text(originalCellContent);\n          _this.inventoryData[inventoryIndex].dbStatus = null;\n\n          _this.openErrorAlert('Invalid input. Please try again.');\n\n          return;\n        }\n\n        _this.updateInventoryData(inventoryIndex, Number(columnNumber), cellContent);\n\n        _this.formatCellOnUpdate(this, Number(columnNumber), inventoryIndex);\n      });\n    }\n\n    validateInput(value, columnNumber, inventoryIndex) {\n      if (value == '') {\n        return true;\n      }\n\n      let regex;\n\n      switch (columnNumber) {\n        case 0:\n          regex = /^[a-zA-Z\\d]{17}$/;\n          break;\n\n        case 1:\n        case 2:\n          regex = /^[a-zA-Z\\d ]*$/;\n          break;\n\n        case 3:\n          regex = /^[a-zA-Z ]*$/;\n          break;\n\n        case 4:\n          regex = /^([1-2]\\d{3})$/;\n          break;\n\n        case 5:\n        case 7:\n          regex = /^(\\d+|\\d{1,3}(,\\d{3})*)$/;\n          break;\n\n        case 6:\n          regex = /^(\\$?(\\d+|\\d{1,3}(,\\d{3})*)(\\.\\d{2})?)$/;\n          break;\n      }\n\n      let regexCheck = regex === null || regex === void 0 ? void 0 : regex.test(value);\n      let uniqueCheck = columnNumber === 0 ? this.isUniqueVIN(value, inventoryIndex) : true;\n      return regexCheck && uniqueCheck;\n    }\n\n    openErrorAlert(message) {\n      this.ngZone.run(() => {\n        this.dialog.open(ErrorAlertComponent, {\n          data: {\n            message: message\n          },\n          width: '325px',\n          height: '175px'\n        });\n      });\n    }\n\n    updateInventoryData(inventoryIndex, columnNumber, cellContent) {\n      switch (columnNumber) {\n        case 0:\n          this.inventoryData[inventoryIndex].vin = cellContent ? cellContent.toUpperCase() : null;\n          break;\n\n        case 1:\n          this.inventoryData[inventoryIndex].brand = cellContent ? cellContent : null;\n          break;\n\n        case 2:\n          this.inventoryData[inventoryIndex].model = cellContent ? cellContent : null;\n          break;\n\n        case 3:\n          this.inventoryData[inventoryIndex].color = cellContent ? cellContent : null;\n          break;\n\n        case 4:\n          this.inventoryData[inventoryIndex].year = cellContent ? Number(cellContent) : null;\n          break;\n\n        case 5:\n          this.inventoryData[inventoryIndex].mileage = cellContent ? Number(cellContent.replace(/[,]/g, '')) : null;\n          break;\n\n        case 6:\n          this.inventoryData[inventoryIndex].price = cellContent ? Number(cellContent.replace(/[$,]/g, '')) : null;\n          break;\n      }\n    }\n\n    formatCellOnUpdate(cell, columnNumber, inventoryIndex) {\n      switch (columnNumber) {\n        case 0:\n          $(cell).text(this.inventoryData[inventoryIndex].vin != null ? this.inventoryData[inventoryIndex].vin : '');\n          break;\n\n        case 5:\n          $(cell).text(this.inventoryData[inventoryIndex].mileage != null ? Number(this.inventoryData[inventoryIndex].mileage).toLocaleString() : '');\n          break;\n\n        case 6:\n          $(cell).text(this.inventoryData[inventoryIndex].price != null ? '$' + Number(this.inventoryData[inventoryIndex].price).toLocaleString(undefined, {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n          }) : '');\n          break;\n      }\n    }\n\n    isUniqueVIN(vin, inventoryIndex) {\n      for (let i = 0; i < this.inventoryData.length; i++) {\n        if (this.inventoryData[i].vin == vin.toUpperCase() && i != inventoryIndex) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    addDeleteButtonHandlers() {\n      let _this = this;\n\n      $('.delete-btn').off('click').click(function () {\n        let inventoryIndex = _this.getInventoryIndexOfRow($(this).parent().parent().parent().children().index($(this).parent().parent()));\n\n        let deletedCar = _this.inventoryData.splice(inventoryIndex, 1)[0];\n\n        if (deletedCar.dbStatus != 'add') {\n          _this.inventoryDataToDelete.push(deletedCar);\n        }\n\n        _this.adjustPageIfEmpty();\n\n        _this.generateTable();\n      });\n    }\n\n    startEditing() {\n      $('#save-btn, #cancel-btn, .button-cell').removeClass('d-none');\n      $('#edit-btn').addClass('d-none');\n      $('.button-container').addClass('button-container-editable');\n      $('table').removeClass('table-hover');\n      $('table').addClass('table-bordered');\n      this.adjustHoverEffect();\n      $('td').attr({\n        contenteditable: 'true'\n      });\n      $('.column-data-0, .button-cell').attr({\n        contenteditable: 'false'\n      });\n      $('tbody tr').off('click');\n    }\n\n    doneEditing() {\n      $('#save-btn, #cancel-btn, .button-cell').addClass('d-none');\n      $('#edit-btn').removeClass('d-none');\n      $('.button-container').removeClass('button-container-editable');\n      $('table').addClass('table-hover');\n      $('table').removeClass('table-bordered');\n      this.adjustHoverEffect();\n      $('td').attr({\n        contenteditable: 'false'\n      });\n      this.addRowDetailsHandlers();\n      this.setRowVisibilityBySearch();\n\n      if (this.sortByColumnNumber) {\n        this.sort(this.sortByColumnNumber, $('#column-header-' + this.sortByColumnNumber).find('i').hasClass('fa-sort-up'));\n      }\n\n      this.adjustPageIfEmpty();\n      this.updatePagination();\n      this.generateTable();\n    }\n\n    saveDataToDB() {\n      for (let i = 0; i < this.inventoryData.length; i++) {\n        if (!this.inventoryData[i].vin) {\n          this.openErrorAlert('VIN is required. Please try again.');\n          return false;\n        }\n\n        if (this.inventoryData[i].dbStatus == 'add') {\n          this.carService.addCar(this.inventoryData[i]);\n        } else if (this.inventoryData[i].dbStatus == 'update') {\n          this.carService.updateCar(this.inventoryData[i], this.inventoryData[i].vin);\n        }\n\n        this.inventoryData[i].dbStatus = null;\n      }\n\n      for (let i = 0; i < this.inventoryDataToDelete.length; i++) {\n        this.carService.deleteCar(this.inventoryDataToDelete[i].vin);\n      }\n\n      this.inventoryDataToDelete = new Array();\n      return true;\n    }\n\n    sort(columnNumber, isAscending) {\n      for (let i = 0; i < this.inventoryData.length - 1; i++) {\n        for (let j = 0; j < this.inventoryData.length - i - 1; j++) {\n          if (this.shouldSwap(j, columnNumber, isAscending)) {\n            let temp = this.inventoryData[j];\n            this.inventoryData[j] = this.inventoryData[j + 1];\n            this.inventoryData[j + 1] = temp;\n          }\n        }\n      }\n    }\n\n    shouldSwap(inventoryIndex, columnNumber, isAscending) {\n      let curr = this.inventoryData[inventoryIndex];\n      let next = this.inventoryData[inventoryIndex + 1];\n\n      switch (columnNumber) {\n        case 0:\n          curr = curr.vin;\n          next = next.vin;\n          break;\n\n        case 1:\n          curr = curr.brand;\n          next = next.brand;\n          break;\n\n        case 2:\n          curr = curr.model;\n          next = next.model;\n          break;\n\n        case 3:\n          curr = curr.color;\n          next = next.color;\n          break;\n\n        case 4:\n          curr = curr.year;\n          next = next.year;\n          break;\n\n        case 5:\n          curr = curr.mileage;\n          next = next.mileage;\n          break;\n\n        case 6:\n          curr = curr.price;\n          next = next.price;\n          break;\n      }\n\n      if (columnNumber < 4) {\n        curr = curr ? curr.toLowerCase() : this.subInfinityForBlanksInSort(isAscending, true);\n        next = next ? next.toLowerCase() : this.subInfinityForBlanksInSort(isAscending, true);\n      } else {\n        curr = curr ? Number(curr) : this.subInfinityForBlanksInSort(isAscending, false);\n        next = next ? Number(next) : this.subInfinityForBlanksInSort(isAscending, false);\n      }\n\n      return isAscending ? curr > next : curr < next;\n    }\n\n    subInfinityForBlanksInSort(isAscending, isChar) {\n      if (isChar) {\n        return isAscending ? '\\uFFFF' : '\\u0000';\n      } else {\n        return isAscending ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n      }\n    }\n\n    highlightSortByColumn(columnNumber) {\n      document.querySelectorAll('th').forEach(function (header) {\n        $(header).removeClass('sort-by-header');\n      });\n      $('#column-header-' + columnNumber).addClass('sort-by-header');\n      document.querySelectorAll('td').forEach(function (cell) {\n        $(cell).removeClass('sort-by-cell');\n      });\n      document.querySelectorAll('.column-data-' + columnNumber).forEach(function (cell) {\n        $(cell).addClass('sort-by-cell');\n      });\n    }\n\n    toggleSortIcon(_this) {\n      if ($(_this).find('i').hasClass('fa-sort')) {\n        document.querySelectorAll('.sort-icon').forEach(function (header) {\n          $(header).addClass('fa-sort').removeClass('fa-sort-up').removeClass('fa-sort-down');\n        });\n        $(_this).find('i').removeClass('fa-sort').addClass('fa-sort-up');\n      } else {\n        $(_this).find('i').toggleClass('fa-sort-up').toggleClass('fa-sort-down');\n      }\n    }\n\n    searchInputHandler() {\n      this.setSearchValue();\n      this.setRowVisibilityBySearch();\n      this.adjustPageIfEmpty();\n      this.generateTable();\n    }\n\n    setRowVisibilityBySearch() {\n      this.setAllRowsToSearchVisible();\n\n      if (this.searchValue.length == 0) {\n        return;\n      }\n\n      for (let i = 0; i < this.inventoryData.length; i++) {\n        if (!this.inventoryData[i].contains(this.searchValue)) {\n          this.inventoryData[i].toDisplaySearch = false;\n        }\n      }\n    }\n\n    setAllRowsToSearchVisible() {\n      for (let i = 0; i < this.inventoryData.length; i++) {\n        this.inventoryData[i].toDisplaySearch = true;\n      }\n    }\n\n    setSearchValue() {\n      this.searchValue = $('#searchbar-field').val().trim();\n    }\n\n    updatePagination() {\n      $('#current-page').text(this.currentPage);\n      $('#rows-per-page-field').val(this.rowsPerPage);\n      $('#prev-page-btn').removeAttr('disabled');\n      $('#next-page-btn').removeAttr('disabled');\n\n      if (this.isPageOnBottomEdgeOfBounds()) {\n        $('#prev-page-btn').attr('disabled', 'disabled');\n      }\n\n      if (this.isPageOnTopEdgeOfBounds()) {\n        $('#next-page-btn').attr('disabled', 'disabled');\n      }\n\n      this.setRowVisibilityByPage();\n    }\n\n    setRowVisibilityByPage() {\n      this.setAllRowsToPageVisible();\n      let k = 0;\n\n      for (let i = 0; i < this.inventoryData.length; i++) {\n        if (k < this.getFirstItemOnPage() || k > this.getLastItemOnPage()) {\n          this.inventoryData[i].toDisplayPage = false;\n        }\n\n        if (this.inventoryData[i].toDisplaySearch) {\n          k++;\n        }\n      }\n    }\n\n    setAllRowsToPageVisible() {\n      for (let i = 0; i < this.inventoryData.length; i++) {\n        this.inventoryData[i].toDisplayPage = true;\n      }\n    }\n\n    rowsPerPageInputHandler() {\n      let input = Number($('#rows-per-page-field').val());\n\n      if (input > 0) {\n        this.rowsPerPage = input;\n        this.adjustPageIfEmpty();\n        this.generateTable();\n      }\n    }\n\n    goToLastPage() {\n      this.currentPage = Math.ceil(this.getEnabledInventoryCount() / this.rowsPerPage);\n    }\n\n    adjustPageIfEmpty() {\n      if (this.isPageEmpty() && this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n\n    isPageEmpty() {\n      return this.currentPage > Math.ceil(this.getEnabledInventoryCount() / this.rowsPerPage);\n    }\n\n    getFirstItemOnPage() {\n      return (this.currentPage - 1) * this.rowsPerPage;\n    }\n\n    getLastItemOnPage() {\n      return this.getFirstItemOnPage() + this.rowsPerPage - 1;\n    }\n\n    isPageOnBottomEdgeOfBounds() {\n      return this.currentPage <= 1;\n    }\n\n    isPageOnTopEdgeOfBounds() {\n      return this.getLastItemOnPage() >= this.getEnabledInventoryCount() - 1;\n    }\n\n    getEnabledInventoryCount() {\n      let count = 0;\n\n      for (let i = 0; i < this.inventoryData.length; i++) {\n        if (this.inventoryData[i].toDisplaySearch) {\n          count++;\n        }\n      }\n\n      return count;\n    }\n\n    getInventoryIndexOfRow(rowNumber) {\n      let count = 0;\n\n      for (let i = 0; i < this.inventoryData.length; i++) {\n        if (this.isInventorySearchVisible(i)) {\n          count++;\n        }\n\n        if (count == this.getFirstItemOnPage() + rowNumber + 1) {\n          return i;\n        }\n      }\n\n      return -1;\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.CarService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 79,\n    vars: 0,\n    consts: [[1, \"container-fluid\"], [\"id\", \"searchbar\", 1, \"input-group\"], [\"type\", \"search\", \"id\", \"searchbar-field\", 1, \"form-control\"], [1, \"input-group-append\"], [\"type\", \"button\", \"id\", \"clear-search-btn\", 1, \"btn\"], [1, \"fad\", \"fa-times-circle\"], [\"type\", \"button\", \"id\", \"search-btn\", 1, \"btn\", \"btn-primary\"], [1, \"far\", \"fa-search\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\"], [1, \"thead-light\"], [1, \"fad\", \"fa-sort\", \"sort-icon\"], [1, \"button-cell\", \"align-middle\", \"d-none\"], [\"id\", \"add-row-btn\", 1, \"btn\", \"btn-success\"], [1, \"far\", \"fa-plus\"], [\"id\", \"table-controls\"], [\"id\", \"pagination\", 1, \"btn-group\"], [\"type\", \"button\", \"id\", \"prev-page-btn\", 1, \"btn\", \"btn-primary\"], [1, \"far\", \"fa-chevron-left\"], [\"type\", \"button\", \"id\", \"current-page\", 1, \"btn\"], [\"type\", \"button\", \"id\", \"next-page-btn\", 1, \"btn\", \"btn-primary\"], [1, \"far\", \"fa-chevron-right\"], [1, \"button-container\"], [\"id\", \"edit-btn\", 1, \"btn\", \"btn-primary\"], [\"id\", \"save-btn\", 1, \"btn\", \"btn-primary\", \"d-none\"], [\"id\", \"cancel-btn\", 1, \"btn\", \"btn-primary\", \"d-none\"], [\"id\", \"rows-per-page\"], [\"type\", \"number\", \"min\", \"1\", \"id\", \"rows-per-page-field\", 1, \"form-control\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\");\n        i0.ɵɵelementStart(1, \"h1\");\n        i0.ɵɵtext(2, \"Inventory Management System\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0);\n        i0.ɵɵelementStart(4, \"h1\");\n        i0.ɵɵtext(5, \"Car Inventory\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 1);\n        i0.ɵɵelement(7, \"input\", 2);\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelementStart(9, \"button\", 4);\n        i0.ɵɵelement(10, \"i\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵelement(12, \"i\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 8);\n        i0.ɵɵelementStart(14, \"table\", 9);\n        i0.ɵɵelementStart(15, \"thead\", 10);\n        i0.ɵɵelementStart(16, \"tr\");\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵelementStart(18, \"div\");\n        i0.ɵɵelementStart(19, \"span\");\n        i0.ɵɵtext(20, \"VIN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"i\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"th\");\n        i0.ɵɵelementStart(23, \"div\");\n        i0.ɵɵelementStart(24, \"span\");\n        i0.ɵɵtext(25, \"Brand\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"i\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"th\");\n        i0.ɵɵelementStart(28, \"div\");\n        i0.ɵɵelementStart(29, \"span\");\n        i0.ɵɵtext(30, \"Model\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"i\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"th\");\n        i0.ɵɵelementStart(33, \"div\");\n        i0.ɵɵelementStart(34, \"span\");\n        i0.ɵɵtext(35, \"Color\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"i\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"th\");\n        i0.ɵɵelementStart(38, \"div\");\n        i0.ɵɵelementStart(39, \"span\");\n        i0.ɵɵtext(40, \"Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"i\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"th\");\n        i0.ɵɵelementStart(43, \"div\");\n        i0.ɵɵelementStart(44, \"span\");\n        i0.ɵɵtext(45, \"Mileage\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(46, \"i\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"th\");\n        i0.ɵɵelementStart(48, \"div\");\n        i0.ɵɵelementStart(49, \"span\");\n        i0.ɵɵtext(50, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(51, \"i\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"td\", 12);\n        i0.ɵɵelementStart(53, \"button\", 13);\n        i0.ɵɵelement(54, \"i\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(55, \"tbody\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"div\", 15);\n        i0.ɵɵelementStart(57, \"div\", 16);\n        i0.ɵɵelementStart(58, \"button\", 17);\n        i0.ɵɵelement(59, \"i\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(60, \"button\", 19);\n        i0.ɵɵelementStart(61, \"button\", 20);\n        i0.ɵɵelement(62, \"i\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"div\", 22);\n        i0.ɵɵelementStart(64, \"button\", 23);\n        i0.ɵɵtext(65, \"Edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"button\", 24);\n        i0.ɵɵtext(67, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"button\", 25);\n        i0.ɵɵtext(69, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"div\", 26);\n        i0.ɵɵelementStart(71, \"label\");\n        i0.ɵɵtext(72, \"Rows per page:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(73, \"input\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"footer\");\n        i0.ɵɵelementStart(75, \"p\");\n        i0.ɵɵtext(76, \"\\u00A9 IT 390 - Rapid Development of Scalable Cloud Applications, 2021\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(77, \"p\");\n        i0.ɵɵtext(78, \"Disclaimer: This is a website for a fictitious company and was developed as an educational project.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}